<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 启用AspectJ对Annotation的支持 -->
	<aop:aspectj-autoproxy/>
	<!-- 自动扫描且只扫描@Controller -->
	<!-- <context:component-scan base-package="com.zdsoft.finance.product.controller"> 
		</context:component-scan> -->
	<context:component-scan
		base-package="com.zdsoft.finance.**.controller,com.zdsoft.finance.common.utils" />
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
			</bean>
		</mvc:message-converters>

		<mvc:argument-resolvers>
			<bean
				class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- 定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/modules/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />

	<!-- 定义无需Controller的url<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/index" />

	<!-- 静态资源拦截 -->
	<mvc:resources location="/image/" mapping="/image/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />

	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="com.zdsoft.finance.common.base.FindParamInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
		<!-- 防重复提交 -->
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="com.zdsoft.finance.common.filter.AvoidDuplicateSubmissionInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- 国际化配置 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/res/core-message</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- 将Controller抛出的异常转到特定View 打开注释后会跳转到500.jsp中 
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Throwable">/error/500</prop>
			</props>
		</property>
	</bean>
	-->
	<!-- 导入公共模块配置文件 URLResourceInterceptor -->
	<import resource="classpath:META-INF/spring/spring-common-context.xml" />
	<!-- 导入公共mvc模块 -->
	<import resource="classpath:META-INF/spring/spring-commweb-mvc.xml" />
	<!-- CED注册 -->
	<import resource="classpath:spring/spring-cedclient-mvc.xml" />
	<!-- 引入工作流 -->
	<import resource="classpath:spring/spring-bpmclient-mvc.xml"/> 
	<!-- spring系统启动以后，会先加载该类 -->
	<bean class="com.zdsoft.finance.common.auto.listener.InitAutoListener">
	</bean>
	

</beans>